/**
 * generated by Xtext 2.35.0
 */
package es.unican.istr.pasys.tests;

import com.google.inject.Inject;
import es.unican.istr.pasys.pasys.ComputationalSystem;
import es.unican.istr.pasys.pasys.PasysPackage;
import es.unican.istr.pasys.validation.MyPasysValidator;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.eclipse.xtext.testing.util.ParseHelper;
import org.eclipse.xtext.testing.validation.ValidationTestHelper;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

@ExtendWith(InjectionExtension.class)
@InjectWith(MyPasysInjectorProvider.class)
@SuppressWarnings("all")
public class MyPasysParsingTest {
  @Inject
  private ParseHelper<ComputationalSystem> parseHelper;

  @Inject
  private ValidationTestHelper validationHelper;

  @Test
  public void testValidModel() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("date \"20/05/2024\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("authors \"Yo\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MainNode ");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.append("{");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("id \"MainNode\"");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("ip \"127.0..1\"");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("userName \"gestor\"");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("concurrencyLevel 8");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("memorySize 0");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("os \"Ubuntu\"");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t              ");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.append("ProcessingNodeCluster MainCluster");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.append("{");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("id \"MainCluster\"");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("nodes ( MainNode )");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.append("ZookeeperService PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.append("{");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("id \"PollutionZkpr\"");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("serverId 2");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("clientPort \"2388\"");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("host MainCluster");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("deploymentConfig NodeDeploymentConf \'kafka-topics.sh\' {");
      _builder.newLine();
      _builder.append("\t\t          \t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t          \t   ");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t          \t   ");
      _builder.append("configFolderPath \"/home/gestor/apache/apps/pollution/topics/config\"");
      _builder.newLine();
      _builder.append("\t\t          \t   ");
      _builder.append("dataFolderPath \"/home/gestor/apache/apps/pollution/topics/data\"");
      _builder.newLine();
      _builder.append("\t\t          \t   ");
      _builder.append("logFolderPath \"/home/gestor/apache/apps/pollution/topics/logs\" ");
      _builder.newLine();
      _builder.append("\t\t          \t   ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/apps/pollution/topics/scripts\"");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.newLine();
      _builder.append("\t\t      ");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("id \"PollutionStorm\"");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("host MainCluster");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t          ");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf_storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t         ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t         ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t         ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t         ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t        ");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf_storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t         ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t         ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t         ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t         ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t           ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t           ");
      _builder.append("host MainCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       ");
      _builder.append("supervisor StormSupervisor PollutionStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t           ");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t\t           ");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf_storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t         ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t         ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t         ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t         ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t           ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t           ");
      _builder.append("host MainCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t           ");
      _builder.append("supervisorSlotPorts {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t               ");
      _builder.append("\"6700\", \"6701\", \"6702\", \"6703\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t           ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       ");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t");
      _builder.append("uiPort \"8080\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf_storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t\t      ");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t\t      ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t\t      ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t\t      ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t\t      ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t\t  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       \t\t  ");
      _builder.append("host MainCluster  ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t       ");
      _builder.append("}    ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t   ");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t  ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t   ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MainCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://127.0.0.1:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://127.0.0.1:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData \"Pollution\" {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"PollutionKafka\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-topics.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/topics/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/topics/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/topics/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/topics/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService \"Pollution Cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("host MainCluster");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf_Cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t      ");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t      ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t      ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t      ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t      ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("dataCenters {");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("racks {");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t\t\t");
      _builder.append("id PollutionClusterRack");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t\t\t");
      _builder.append("nodes MainCluster ");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("cqlSchemas {");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("fileContent \"/home/gestor/apache/apps/pollution/workflows/data\"        \t\t\t   \t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("fileName \"cassandra_schema.sql\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("filePath \"/home/gestor/apache/apps/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("elementType CASSANDRA_SCHEMA             \t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("owner MainNode");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("endpointSnitch GossipingPropertyFileSnitch");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("seeds MainCluster");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("seedProviderClass SimpleSeedProvider");
      _builder.newLine();
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow PollutionProcess {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionProcess");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t");
      _builder.append("Task MainTask {");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("id MainTask");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("triggerStreamData Pollution ");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t\t");
      _builder.append("implementingClassName \"es.unican.dintenr.santanderPollution.SantanderPollutionTopology\"\t ");
      _builder.newLine();
      _builder.append("\t\t\t     \t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t     \t");
      _builder.append("rootTask MainTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"SantanderPollution.jar\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("artifactLocator \"/home/gestor/apache/apps/pollution/workflows/jars\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/apps/pollution/workflows/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/apps/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/apps/pollution/workflows/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/apps/pollution/workflows/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t    \t");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testArtifactDescriptorCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path/to/file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testArtifactDescriptorFileNameEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path/to/file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ARTIFACT_DESCRIPTOR, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testArtifactDescriptorFilePathEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ARTIFACT_DESCRIPTOR, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testArtifactDescriptorFilePathNotCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"=)PATH\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"825566\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ARTIFACT_DESCRIPTOR, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testArtifactDescriptorLocalPathEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ARTIFACT_DESCRIPTOR, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testArtifactDescriptorLocalPathNotCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"path/valid?\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ARTIFACT_DESCRIPTOR, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeKeyPairFormatEqualsCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.8\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeKayPairFormatColonCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.8\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"{key:value, key2:value2}\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeConcurrencyLevelLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("concurrencyLevel -1");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeAMIEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("AMI \"\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeExternalIPEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeExternalIPLessThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeExternalIPMoreThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.1.3\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeExternalIPGreaterThan255() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.256\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeInstanceTypeEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("instanceType \"\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeIPEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeIPLessThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeIPMoreThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1.3\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeIPGreaterThan255() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.256\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeKayPairEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.8\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeKayPairNoComa() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.8\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value key2=value\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.INVALID_KEY_VALUE_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeKayPairNoOpenCurlyBrace() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.8\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key:value, key2:value}\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.INVALID_KEY_VALUE_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeKayPairNoClosedCurlyBrace() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.8\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"{key:value, key2:value\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.INVALID_KEY_VALUE_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeKayPairMixinPatterns() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"100.24.24.2\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"200.0.0.8\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"{key=value, key2:value}\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.INVALID_KEY_VALUE_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeMemorySizeLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("memorySize -1");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeOsEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("os \"\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeSecurityGroupEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("securityGroup \"\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeSpeedFactorLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor -0.01");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeSubnetEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("subnet \"\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeUserNameEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testAWSVirtualProcessingNodeVpcEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("AWSVirtualProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("       \t\t");
      _builder.append("id \"id\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("speedFactor 0.2");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("keyPair \"key=value, key2=value2\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("vpc \"\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.AWS_VIRTUAL_PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceDataCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/dir\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"14000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters {");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("racks {");
      _builder.newLine();
      _builder.append("        \t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("        \t\t\t\t\t");
      _builder.append("id PollutionClusterRack");
      _builder.newLine();
      _builder.append("        \t\t\t\t\t");
      _builder.append("nodes CassandraCluster ");
      _builder.newLine();
      _builder.append("        \t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceDataFileDirClassEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"14000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters {");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("racks {");
      _builder.newLine();
      _builder.append("        \t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("        \t\t\t\t\t");
      _builder.append("id PollutionClusterRack");
      _builder.newLine();
      _builder.append("        \t\t\t\t\t");
      _builder.append("nodes CassandraCluster ");
      _builder.newLine();
      _builder.append("        \t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceDataFileDirNotAPath() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 25");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"pa//?%$€tlsl7\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"14000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters {");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("racks {");
      _builder.newLine();
      _builder.append("        \t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("        \t\t\t\t\t");
      _builder.append("id PollutionClusterRack");
      _builder.newLine();
      _builder.append("        \t\t\t\t\t");
      _builder.append("nodes CassandraCluster ");
      _builder.newLine();
      _builder.append("        \t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceEndPointSnitchClassEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"14000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters {");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("racks {");
      _builder.newLine();
      _builder.append("        \t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("        \t\t\t\t\t");
      _builder.append("id PollutionClusterRack");
      _builder.newLine();
      _builder.append("        \t\t\t\t\t");
      _builder.append("nodes CassandraCluster ");
      _builder.newLine();
      _builder.append("        \t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("cqlSchemas {");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("fileContent \"/home/gestor/apache/apps/pollution/workflows/data\"        \t\t\t   \t\t\t");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("fileName \"cassandra_schema.sql\"");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("filePath \"/home/gestor/apache/apps/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("elementType CASSANDRA_SCHEMA             \t\t\t");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("endpointSnitch \"\"");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("seeds CassandraCluster");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("seedProviderClass SimpleSeedProvider");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceNumTokensLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceLoggingEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServicePasswordEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServicePortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1023");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9024\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServicePortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 65536");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9024\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceRcpPortEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceRcpPortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceRcpPortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"65536\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceRcpPortNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceSslStoragePortEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceSslStoragePortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceSslStoragePortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"65553\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceSslStoragePortNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceStoragePortEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceStoragePortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceStoragePortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"65536\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceStoragePortNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceRcpPortAndSslStoragePortSameValue() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.SAME_PORTS);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceRcpPortAndStoragePortSameValue() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.SAME_PORTS);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceSslStoragePortAndStoragePortSameValue() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.SAME_PORTS);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCassandraServiceSeedProviderClassEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"14000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters {");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("racks {");
      _builder.newLine();
      _builder.append("        \t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("        \t\t\t\t\t");
      _builder.append("id PollutionClusterRack");
      _builder.newLine();
      _builder.append("        \t\t\t\t\t");
      _builder.append("nodes CassandraCluster ");
      _builder.newLine();
      _builder.append("        \t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("cqlSchemas {");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("fileContent \"/home/gestor/apache/apps/pollution/workflows/data\"        \t\t\t   \t\t\t");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("fileName \"cassandra_schema.sql\"");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("filePath \"/home/gestor/apache/apps/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("elementType CASSANDRA_SCHEMA             \t\t\t");
      _builder.newLine();
      _builder.append("        \t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("        \t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("endpointSnitch endpointString");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("seeds CassandraCluster");
      _builder.newLine();
      _builder.append("        \t");
      _builder.append("seedProviderClass \"\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.CASSANDRA_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCommunicationMeterMonitoringPortEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configData \"configData\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("connectedTo ( network )");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("launchingScripts ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType KAFKA_FLOW_STREAM");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("memorySize 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os \"W\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedMeters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("CommunicationMeter meter1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id ddd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("metric networkUt");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringPort \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringTime 4333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id network");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith 3.0");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NetworkUtilization networkUt {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id net");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target network");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeMemory nodememory {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodememory");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeUtilization nodeutilization {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id utilization");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"ddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"Properties\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("exportersData { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ExporterData data {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifact \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("monitorizedMeters ( \"MyNode.meter1\" )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.COMMUNICATION_METER, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCommunicationMeterMonitoringPortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configData \"configData\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("connectedTo ( network )");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("launchingScripts ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType KAFKA_FLOW_STREAM");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("memorySize 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os \"W\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedMeters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("CommunicationMeter meter1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id ddd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("metric networkUt");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringPort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringTime 4333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id network");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith 3.0");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NetworkUtilization networkUt {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id net");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target network");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeMemory nodememory {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodememory");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeUtilization nodeutilization {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id utilization");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"ddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"Properties\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("exportersData { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ExporterData data {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifact \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("monitorizedMeters ( \"MyNode.meter1\" )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.COMMUNICATION_METER, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCommunicationMeterMonitoringPortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configData \"configData\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("connectedTo ( network )");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("launchingScripts ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType KAFKA_FLOW_STREAM");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("memorySize 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os \"W\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedMeters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("CommunicationMeter meter1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id ddd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("metric networkUt");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringPort \"65536\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringTime 4333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("NodeResourceMeter resourceMeter {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id resourceMeter");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringPort \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringTime 323232");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("mMetric nodememory");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("uMetric nodeutilization");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id network");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith 3.0");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NetworkUtilization networkUt {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id net");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target network");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeMemory nodememory {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodememory");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeUtilization nodeutilization {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id utilization");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"ddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"Properties\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("exportersData { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ExporterData data {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifact \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("monitorizedMeters ( \"MyNode.meter1\" )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.COMMUNICATION_METER, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCommunicationMeterMonitoringPortIsNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configData \"configData\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("connectedTo ( network )");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("launchingScripts ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType KAFKA_FLOW_STREAM");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("memorySize 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os \"W\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedMeters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("CommunicationMeter meter1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id ddd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("metric networkUt");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringPort \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringTime 4333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id network");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith 3.0");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NetworkUtilization networkUt {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id net");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target network");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeMemory nodememory {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodememory");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeUtilization nodeutilization {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id utilization");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"ddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"Properties\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("exportersData { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ExporterData data {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifact \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("monitorizedMeters ( \"MyNode.meter1\" )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.COMMUNICATION_METER, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testCommunicationMeterMonitoringTimeLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configData \"configData\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("connectedTo ( network )");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("launchingScripts ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType KAFKA_FLOW_STREAM");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("memorySize 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os \"W\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedMeters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("CommunicationMeter meter1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id ddd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("metric networkUt");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringPort \"54444\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringTime -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id network");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith 3.0");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NetworkUtilization networkUt {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id net");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target network");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeMemory nodememory {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodememory");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeUtilization nodeutilization {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id utilization");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"ddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"Properties\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("exportersData { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ExporterData data {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifact \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("monitorizedMeters ( \"MyNode.meter1\" )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.COMMUNICATION_METER, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDeploymentConstraintsCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"key2=value2\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDeploymentConstraintsLabelsEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"key2=value2\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DEPLOYMENT_CONSTRAINTS, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDeploymentConstraintsLabelsInvalidFormat() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"key==value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"key2=value, key3=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DEPLOYMENT_CONSTRAINTS, 
        MyPasysValidator.INVALID_PROPERTIES_PATTERN);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDeploymentConstraintsResourcesEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DEPLOYMENT_CONSTRAINTS, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDeploymentConstraintsResourcesInvalidFormat() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"key2!=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DEPLOYMENT_CONSTRAINTS, 
        MyPasysValidator.INVALID_PROPERTIES_PATTERN);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDeploymentFileDescriptorCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDeploymentFileDescriptorFileContentEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DEPLOYMENT_FILE_DESCRIPTOR, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDeploymentFileDescriptorFileNameEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DEPLOYMENT_FILE_DESCRIPTOR, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDeploymentFileDescriptorFilePathEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DEPLOYMENT_FILE_DESCRIPTOR, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDeploymentFileDescriptorFilePathNotCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path[]\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DEPLOYMENT_FILE_DESCRIPTOR, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDerivedFlowStreamDataCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("DerivedStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id streamData");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("inputs ( Pollution )");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("pattern \"pattern\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"myKey\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"schema\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDerivedFlowStreamDataMessageSizeLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DerivedStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id streamData");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("inputs ( Pollution )");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("pattern \"pattern\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"myKey\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"schema\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DERIVED_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDerivedFlowStreamDataNumPartitionsLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DerivedStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id streamData");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("inputs ( Pollution )");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("pattern \"pattern\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"myKey\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"schema\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DERIVED_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDerivedFlowStreamDataNumReplicationLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DerivedStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id streamData");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("inputs ( Pollution )");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("pattern \"pattern\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"myKey\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"schema\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DERIVED_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDerivedFlowStreamDataRetentionBytesLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DerivedStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id streamData");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("inputs ( Pollution )");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("pattern \"pattern\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"myKey\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"schema\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DERIVED_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDerivedFlowStreamDataRetentionsMSLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DerivedStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id streamData");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("inputs ( Pollution )");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("pattern \"pattern\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"myKey\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"schema\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DERIVED_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDerivedStreamDataPatternEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DerivedStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id streamData");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("inputs ( Pollution )");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("pattern \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"myKey\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"SCHEMA\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DERIVED_STREAM_DATA, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testDerivedStreamDataSchemaFileEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DerivedStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id streamData");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 22");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("inputs ( Pollution )");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("pattern \"pattern\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"myKey\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.DERIVED_STREAM_DATA, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testExporterDataCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("exportersData { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ExporterData data {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifact \"artifact\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}\t");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testExporterDataArtifactEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("exportersData { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ExporterData data {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifact \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.EXPORTER_DATA, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testHostIsOfProcessingNodeClusterDeploymentConfShouldBeOfNodeDeploymentConf() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode NimbusNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id NimbusNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.48\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode SupervisorNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id SupervisorNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.51\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster StormCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id StormCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( NimbusNode, SupervisorNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster NimbusCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( NimbusNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster SupervisorCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id SupervisorCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( SupervisorNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"gcr.io/google_containers/kubernetes-kafka\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"1.0-10.2.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t \t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host SupervisorCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"8080\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-topics.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow PollutionProcess {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionProcess");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MainTask {\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MainTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"es.unican.dintenr.santanderPollution.SantanderPollutionTopology\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MainTask\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"SantanderPollution.jar\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/pollution/workflows/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/pollution/workflows/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/pollution/workflows/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/pollution/workflows/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_DEPLOYMENT_CONF);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testHostIsOfKubernetesClusterDeploymentConfShouldBeOfKubernetesDeploymentConf() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode NimbusNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id NimbusNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.48\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode SupervisorNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id SupervisorNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster StormCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id StormCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( NimbusNode, SupervisorNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster NimbusCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( NimbusNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster SupervisorCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id SupervisorCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( SupervisorNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster \"KubernetesCluster\" {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"KubernetesCluster\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"C:\\\\temp\\\\kubernetes\\\\kubeConfig\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ^KubernetesCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\"  {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ^KubernetesCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"gcr.io/google_containers/kubernetes-kafka\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"1.0-10.2.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host SupervisorCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"8080\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"gcr.io/google_containers/kubernetes-kafka\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"1.0-10.2.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow PollutionProcess {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionProcess");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MainTask {\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MainTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"es.unican.dintenr.santanderPollution.SantanderPollutionTopology\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MainTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"SantanderPollution.jar\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/pollution/workflows/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/pollution/workflows/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/pollution/workflows/logs\"\t");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/pollution/workflows/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cqlSchemas { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"cassandra_schema\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/home/gestor/apache/apps/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/home/gestor/apache/apps/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("endpointSnitch \"SimpleSnitch\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("seeds CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("seedProviderClass \"SimpleProvider\"");
      _builder.newLine();
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_DEPLOYMENT_CONF);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testHostIsOfSwarmClusterDeploymentConfShouldBeOfSwarmDeploymentConf() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode NimbusNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id NimbusNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.48\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode SupervisorNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id SupervisorNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster StormCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id StormCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( NimbusNode, SupervisorNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster NimbusCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( NimbusNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster SupervisorCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id SupervisorCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( SupervisorNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster \"SwarmCluster\" {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"SwarmCluster\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"1205\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user root");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ^SwarmCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf zookeeper {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ^KubernetesCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"gcr.io/google_containers/kubernetes-kafka\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"1.0-10.2.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host SupervisorCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"8080\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"gcr.io/google_containers/kubernetes-kafka\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"1.0-10.2.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow PollutionProcess {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionProcess");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MainTask {\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MainTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"es.unican.dintenr.santanderPollution.SantanderPollutionTopology\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MainTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"SantanderPollution.jar\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/pollution/workflows/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/pollution/workflows/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/pollution/workflows/logs\"\t");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/pollution/workflows/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"Conf cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cqlSchemas { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"cassandra_schema\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/home/gestor/apache/apps/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/home/gestor/apache/apps/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("endpointSnitch \"SimpleSnitch\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("seeds CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("seedProviderClass \"SimpleProvider\"");
      _builder.newLine();
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_DEPLOYMENT_CONF);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testHostIsOfNomadClusterDeploymentConfShouldBeOfNomadDeploymentConf() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode NimbusNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id NimbusNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.48\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode SupervisorNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id SupervisorNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode CassandraNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster StormCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id StormCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( NimbusNode, SupervisorNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster NimbusCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( NimbusNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster SupervisorCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id SupervisorCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( SupervisorNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster CassandraCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CasandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( CassandraNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster \"NomadCluster\" {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"NomadCluster\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"111.111.111.111\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"8000\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ^NomadCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf \"Conf zookeeper\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image zookeeper");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 0");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"region1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter dataCenter1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("driver JAVA");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ^NomadCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"node-kafka\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"                ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host SupervisorCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"8080\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host NimbusCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"gcr.io/google_containers/kubernetes-kafka\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"1.0-10.2.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow PollutionProcess {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionProcess");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MainTask {\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MainTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"es.unican.dintenr.santanderPollution.SantanderPollutionTopology\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MainTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"SantanderPollution.jar\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/pollution/workflows/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/pollution/workflows/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/pollution/workflows/logs\"\t");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/pollution/workflows/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("CassandraService PollutionCassandra {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionCassandra");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd root");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 9042");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoBootstrap false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numTokens 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataFileDir \"/home/gestor/apache/Services/cassandra/data/data\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("storagePort \"7000\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("sslStoragePort \"7001\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rpcPort \"9160\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"cassandra\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/cassandra/bin\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/cassandra/config\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/cassandra/data\"");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/cassandra/logs\"\t");
      _builder.newLine();
      _builder.append("\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/cassandra/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("dataCenters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DataCenter PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("racks { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("Rack PollutionCluster {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id PollutionCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("nodes CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cqlSchemas { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"cassandra_schema\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/home/gestor/apache/apps/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/home/gestor/apache/apps/pollution/workflows/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("endpointSnitch \"SimpleSnitch\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("seeds CassandraCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("seedProviderClass \"SimpleProvider\"");
      _builder.newLine();
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.INVALID_DEPLOYMENT_CONF);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaFlowStreamDataCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("KafkaFlowStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id streamData");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 2222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 30393");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isImplemented false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 3333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("predecessor Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("source Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \'3333\'");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaFlowStreamDataMessageSizeLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("KafkaFlowStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id kdkdk");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 2222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 30393");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isImplemented false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("predecessor Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("source Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \'3333\'");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_FLOW_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaFlowStreamDataNumPartitionsLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("KafkaFlowStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id kdkdk");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 2222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 30393");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isImplemented false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 3333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("predecessor Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("source Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \'3333\'");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_FLOW_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaFlowStreamDataNumReplicationLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("KafkaFlowStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id kdkdk");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 2222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 30393");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isImplemented false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 3333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("predecessor Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("source Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \'3333\'");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_FLOW_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaFlowStreamDataRetentionBytesLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("KafkaFlowStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id kdkdk");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 2222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isImplemented false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 3333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("predecessor Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("source Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \'3333\'");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_FLOW_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaFlowStreamDataRetentionsMSLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("KafkaFlowStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id streamData");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 30393");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isImplemented false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 3333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("predecessor Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("source Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \'3333\'");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_FLOW_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaFlowStreamDataSchemaFileEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StreamDataRate rate {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id rate");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.streamData\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedStreamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("KafkaFlowStreamData streamData {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id kdkdk");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numPartitions 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("numReplication 2");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_ms 2222");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("retention_bytes 30393");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isImplemented false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isSingleUse false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("messageSize 3333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("predecessor Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("source Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("assignedPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamDataPartition {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("host MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("key \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("ownedMeters {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("StreamRateMeter MeterStreamRate {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("id sdd");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringPort \'3333\'");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringTime 333");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("metric rate");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("schemaFile \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_FLOW_STREAM_DATA, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"3444\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceClientPortEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceClientPortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceClientPortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"65536\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceClientPortNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"port\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceCommIdSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"3444\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceIdEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"3444\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceLogFlushIntervalMessagesSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceLogFlushIntervalSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceNumIOThreadsSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceNumNetworkThreadsSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceNumPartitionsSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceNumRecoveryThreadPerDataDirSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceSocketReceiveBufferBytesSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceSocketRequestMaxBytesSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceSocketSendBufferBytesSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaServiceZookeeperConnectionTimeoutSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode KafkaNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.52\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster KafkaCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( KafkaNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host KafkaCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaWorkflowStreamDataCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaWorkloadStreamDataMessageSizeLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_WORKLOAD_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaWorkloadStreamDataNumPartitionsLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_WORKLOAD_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaWorkloadStreamDataNumReplicationLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_WORKLOAD_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaWorkloadStreamDataRetentionBytesLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_WORKLOAD_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaWorkloadStreamDataRetentionsMSLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_WORKLOAD_STREAM_DATA, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKafkaWorkloadStreamDataSchemaFileEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("schemaFile \"\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KAFKA_WORKLOAD_STREAM_DATA, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesClusterCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesClusterApiVersionEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_CLUSTER, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesClusterIdEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_CLUSTER, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesClusterKubeConfigPathEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_CLUSTER, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesClusterKubeConfigPathNotAPath() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"//invalid path //\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_CLUSTER, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentConfCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -s\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentArgsEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -s\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentCommandEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentEnvEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"key2=value2\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentEnvInvalidProperties() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_PROPERTIES_PATTERN);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentExternalIpEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentExternalIpLessThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentExternalIpMoreThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.1.3.638.85\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentExternalIpOctetGreaterthan255() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.1.256\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentImagePullPolicyEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.1.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentImageTagEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.1.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentReplicasLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas -1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.1.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testKubernetesDeploymentRestartPolicyEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 3");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"labels\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"ENV\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.1.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy IfNotPresent");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"3.7\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports { ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"published\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType LOAD_BALANCER");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.KUBERNETES_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testMemSQLServiceCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1025\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testMemSQLServiceIdEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1025\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.MEM_SQL_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testMemSQLServiceLoggingEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1025\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.MEM_SQL_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testMemSQLServicePasswordEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1025\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.MEM_SQL_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testMemSQLServicePortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1023\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.MEM_SQL_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testMemSQLServicePortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 65536");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.MEM_SQL_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNeo4JServiceCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Neo4JService neo {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id neo");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1025");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNeo4JServiceIdEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Neo4JService neo {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id neo");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1025");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NEO4_JSERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNeo4JServiceLoggingEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Neo4JService neo {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id neo");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1025");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NEO4_JSERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNeo4JServicePasswordEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Neo4JService neo {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id neo");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1025");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NEO4_JSERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNeo4JServicePortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Neo4JService neo {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id neo");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 1023\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NEO4_JSERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNeo4JServicePortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id CassandraNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.47\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( node )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Neo4JService neo {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id neo");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 65536\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NEO4_JSERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNetworkCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id network");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith 3.0");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNetworkIdEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith 3.0");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NETWORK, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNetworkBandwithLessThan0() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"network\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith -0.0001");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NETWORK, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("arguments { \"arg\" , \"arg2\" }\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/artf\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfArgumentsEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("arguments { \"arg\" , \"\" }\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/artf\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfArtifactLocatorEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfArtifactLocatorNotCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"C:::home\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfCodeFolderPathEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfCodeFolderPathNotCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/?/)!=J\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfConfigFolderPathEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfConfigFolderPathNotCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"%my/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfDataFolderPathEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/data\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"=)PATH\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfDataFolderPathNotCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"///P///ath\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfLogFolderPathEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfLogFolderPathNotCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"€€€€€€\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfScriptFolderPathEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/log\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfScriptFolderPathNotCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"Invalid//Path\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeDeploymentConfPathsWithSameRoute() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.49\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 8 ");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os Ubuntu");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2105\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/bin\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_DEPLOYMENT_CONF, 
        MyPasysValidator.DUPLICATE_PATHS);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeResourceMeterMonitoringPortIsEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configData \"configData\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("connectedTo ( network )");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("launchingScripts ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType KAFKA_FLOW_STREAM");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("memorySize 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os \"W\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedMeters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("NodeResourceMeter resourceMeter {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id resourceMeter");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringPort \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringTime 323232");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("mMetric nodememory");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("uMetric nodeutilization");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id network");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith 3.0");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NetworkUtilization networkUt {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id net");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target network");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeMemory nodememory {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodememory");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeUtilization nodeutilization {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id utilization");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"ddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"Properties\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("exportersData { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ExporterData data {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifact \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("monitorizedMeters ( \"MyNode.meter1\" )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_RESOURCE_METER, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeResourceMeterMonitoringPortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configData \"configData\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("connectedTo ( network )");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("launchingScripts ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType KAFKA_FLOW_STREAM");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("memorySize 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os \"W\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedMeters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("NodeResourceMeter resourceMeter {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id resourceMeter");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringPort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringTime 323232");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("mMetric nodememory");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("uMetric nodeutilization");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id network");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith 3.0");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NetworkUtilization networkUt {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id net");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target network");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeMemory nodememory {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodememory");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeUtilization nodeutilization {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id utilization");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"ddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"Properties\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("exportersData { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ExporterData data {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifact \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("monitorizedMeters ( \"MyNode.meter1\" )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_RESOURCE_METER, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeResourceMeterMonitoringPortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("concurrencyLevel 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configData \"configData\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("configFiles (");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType AVRO_SERVICE");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("connectedTo ( network )");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("launchingScripts ( ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("DeploymentFileDescriptor {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileContent \"content\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("elementType KAFKA_FLOW_STREAM");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("owner MyNode");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append(")");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("memorySize 255");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os \"W\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedMeters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("NodeResourceMeter resourceMeter {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id resourceMeter");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringPort \"65536\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringTime 323232");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("mMetric nodememory");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringServer prometheus");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("uMetric nodeutilization");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Network network {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id network");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("bandwith 3.0");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NetworkUtilization networkUt {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id net");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target network");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeMemory nodememory {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodememory");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeUtilization nodeutilization {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id utilization");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PrometheusService prometheus {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id prometheus");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf kubernetes {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"ddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"dddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"Properties\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("exportersData { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ExporterData data {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifact \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("monitorizedMeters ( \"MyNode.meter1\" )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_RESOURCE_METER, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNodeResourceMeterMonitoringTimeLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedMeters { ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("NodeResourceMeter resourceMeter {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id resourceMeter");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringPort \"5444\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("monitoringTime -1");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("\t\t                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("mMetric nodememory");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("uMetric nodeutilization");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeMemory nodememory {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodememory");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeUtilization nodeutilization {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id utilization");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target MyNode ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NODE_RESOURCE_METER, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadClusterCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadClusterIdEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"200.0.0.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_CLUSTER, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadClusterIpEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_CLUSTER, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadClusterIpLessThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_CLUSTER, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadClusterIpMoreThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2.\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_CLUSTER, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadClusterIpNoDotsForSeparation() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2 2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_CLUSTER, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadClusterPortEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_CLUSTER, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadClusterPortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"1023\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_CLUSTER, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadClusterPortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"65536\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_CLUSTER, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadClusterPortNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"port\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_CLUSTER, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentConfCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"ddd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"Pull\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentArgsEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentCommandEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentDataCenterEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image \"ubuntu\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentEnvEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentEnvInvalidProperties() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_PROPERTIES_PATTERN);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentImagePullPolicyEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentImageEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image \"\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentPriorityLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image \"EU-West\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority -1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentRegionEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image \"ubuntu\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentReplicasLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas -1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testNomadDeploymentRestartPolicyEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NomadCluster nomad {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"222.22.2.2\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"5554\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host nomad");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"logging\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NomadDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("priority 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("region \"EU-West\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("dataCenter \"Berlin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"ed\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.NOMAD_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testPortCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"label\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"pull\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testPortPublishedEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"label\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"pull\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PORT, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testPortTargetEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"label\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"pull\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PORT, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("PhysicalProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeConcurrencyLevelSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("PhysicalProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("codeFiles ( ");
      _builder.newLine();
      _builder.append("            \t");
      _builder.append("ArtifactDescriptor {");
      _builder.newLine();
      _builder.append("            \t\t");
      _builder.append("fileName \"file\"");
      _builder.newLine();
      _builder.append("            \t\t");
      _builder.append("filePath \"/path\"");
      _builder.newLine();
      _builder.append("            \t\t");
      _builder.append("localPath \"/path\"");
      _builder.newLine();
      _builder.append("            \t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("           ");
      _builder.append(")");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("concurrencyLevel -1");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeConfiDataEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("PhysicalProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("configData \"\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeConfigDataInvalidPattern() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("PhysicalProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("           ");
      _builder.append("configData \"key1=value1, key2=\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.INVALID_PROPERTIES_PATTERN);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeIpEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("PhysicalProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("id \"InvalidNode\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeIpLessThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("PhysicalProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("id \"InvalidNode\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("name \"Jake\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeIpMoreThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("PhysicalProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("id \"InvalidNode\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"255.255.255.1.100\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("name \"Jake\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeIpNoDotsForSeparation() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("PhysicalProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("id \"InvalidNode\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("ip \"100 100 100 100\"");
      _builder.newLine();
      _builder.append("            ");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeMemorySizeSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("memorySize -1");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeOsEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode InvalidNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("os \"\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeSpeedFactorSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode Node {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Node");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.48\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor -0.001");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeSpeedFactorGreaterThanOne() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode NimbusNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id NimbusNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.48\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.001");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName gestor");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.INVALID_SPEED_FACTOR);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testProcessingNodeUserNameEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode NimbusNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id NimbusNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"172.31.16.48\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 0.5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.PROCESSING_NODE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceDriverCoresSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceDriverMaxResultSizeEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceDriverMaxResultSizeSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"-1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceDriverMaxResultSizeNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceDriverMemorySmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceExecutorMemoryLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceExtraListenerEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceLocalDirEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceLocalDirNotAPath() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"not>>>correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceLogCallerContextEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceSubmitDeployModeEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize 23");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSparkServiceWindowSizeSmallerThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Jake\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/kafka/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"New Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow MyWorkflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyWorkflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task MyTask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id MyTask");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask MyTask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SchedulableSet set {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SparkService sparkSer {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id sparkSer");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverCores 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMemory 2333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverSuperviser false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("executorMemory 23333");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logCallerContext \"context\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logConf false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("load set");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("master MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("windowSize -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf conf {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/sparkSer/bin\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/sparkSer/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/sparkSer/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/sparkSer/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/sparkSer/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/sparkSer/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("driverMaxResultSize \"3333\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("extraListener \"listener\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"correct/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("submitDeployMode \"deployMode\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( MyWorkflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SPARK_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormServiceCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"/local/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"8080\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormServiceLocalDirEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"8080\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.STORM_SERVICE, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormServiceLocalDirNotAPath() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"$$PathNoValid0\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"8080\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.STORM_SERVICE, 
        MyPasysValidator.INVALID_PATH);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormSupervisorSupervisorSlotsEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"/local/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"8080\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.STORM_SUPERVISOR, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormSupervisorSupervisorSlotPortsNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"3777\", \"NotANumber\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"/local/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"3444\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.STORM_SUPERVISOR, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormSupervisorSupervisorSlotPortsSmallerThanExpected() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"3444\", \"2236\", \"1023\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"/local/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"3444\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.STORM_SUPERVISOR, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormSupervisorSupervisorSlotPortsGreaterThanExpected() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"65536\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"/local/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"3444\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.STORM_SUPERVISOR, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormUIUiPortEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"/local/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.STORM_UI, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormUIUiPortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"/local/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.STORM_UI, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormUIUiPortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"/local/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"65536\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.STORM_UI, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testStormUIUiPortNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("advertisedListeners \"PLAINTEXT://172.31.16.47:9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("listeners \"PLAINTEXT://172.31.16.47:9092\"\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("StormService PollutionStorm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionStorm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nimbus StormNimbus PollutionStormNimbus {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormNimbus");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("supervisor StormSupervisor PollutioStormSupervisor {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormSupervisor");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("supervisorSlotPorts { \"6700\", \"6701\", \"6702\", \"6703\" }");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("localDir \"/local/path\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ui StormUI PollutionStormUI {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("id PollutionStormUI");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("uiPort \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"storm\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/storm/bin\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/storm/config\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/storm/data\"");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/storm/logs\"\t");
      _builder.newLine();
      _builder.append("\t\t            ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/storm/scripts\"\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.STORM_UI, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmClusterCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster swarm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id swarm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"200.3.3.3\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user \"julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmClusterIpEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster swarm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id swarm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"9876\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user \"julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_CLUSTER, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmClusterIpLessThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster swarm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id swarm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"33.200.33\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user \"julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_CLUSTER, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmClusterIpMoreThanFourOctets() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster swarm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id swarm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"33.200.33.44.5\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"9876\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user \"julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_CLUSTER, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmClusterIpNoDotsForSeparation() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster swarm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id swarm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"33 200.33.44\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"3444\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user \"julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_CLUSTER, 
        MyPasysValidator.INVALID_IP);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmClusterPortEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster swarm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id swarm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"33.200.33.44\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user \"julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_CLUSTER, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmClusterPortSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster swarm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id swarm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"33.200.33.44\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user \"julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_CLUSTER, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmClusterPortGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster swarm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id swarm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"33.200.33.44\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user \"julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_CLUSTER, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmClusterPortNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster swarm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id swarm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"33.200.33.44\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user \"julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_CLUSTER, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmClusterUserEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem System {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("SwarmCluster swarm {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id swarm");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"33.333.33.44\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port \"3444\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("user \"\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_CLUSTER, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmDeploymentConfCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig SwarmDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"Policy\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"this\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"that\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmDeploymentArgsEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig SwarmDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"Policy\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"this\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"that\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmDeploymentCommandEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig SwarmDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"Policy\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"this\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"that\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmDeploymentImagePullPolicyEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig SwarmDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"this\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"that\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmDeploymentImageEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig SwarmDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image \"\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"Policy\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"this\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"that\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmDeploymentNetworkEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig SwarmDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image \"\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"Policy\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("network \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"this\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"that\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmDeploymentEnvEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig SwarmDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image \"\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"Policy\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("network \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"this\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"that\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmDeploymentEnvPropertiesInvalid() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig SwarmDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image \"image\"\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value, key\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"Policy\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("network \"localhost\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"this\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"that\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_DEPLOYMENT_CONF, 
        MyPasysValidator.INVALID_PROPERTIES_PATTERN);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmDeploymentReplicasLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig SwarmDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas -1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"Policy\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"this\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"that\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_DEPLOYMENT_CONF, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testSwarmDeploymentRestartPolicyEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KubernetesCluster cluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("kubeConfigPath \"/path/file\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("apiVersion \"2\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("MemSQLService mem {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id mem");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host cluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logging \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("passwd \"root\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("port 2333\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig SwarmDeploymentConf imageTag1 {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("image Ubuntu\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"dd\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"Policy\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"this\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"that\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}\t\t\t\t\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.SWARM_DEPLOYMENT_CONF, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testTaskProcessingAmountCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("inputStreamData ( Pollution )");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("returnedStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("TaskProcessingAmount taskprocessingAMount {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id taskprocessingamount");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.supertask\"\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("histogramBuckectNum 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("expectedMaxTPA 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("expectedMinTPA 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("linearBucketDistribution false");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testTaskProcessingAmountExpectedMaxTPALessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("TaskProcessingAmount taskprocessingAMount {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id taskprocessingamount");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.supertask\"\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("histogramBuckectNum 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("expectedMaxTPA -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("expectedMinTPA 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("linearBucketDistribution false");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.TASK_PROCESSING_AMOUNT, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testTaskProcessingAmountExpectedMinTPALessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaWorkloadStreamData Pollution {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id Pollution");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("cleanupPolicy false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_ms 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("retention_bytes 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numReplication 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("messageSize 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("holder PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"kafka-Service-start.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/services/kafka/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/services/kafka/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/services/kafka/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/services/kafka/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/services/kafka/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("TaskProcessingAmount taskprocessingAMount {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id taskprocessingamount");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.supertask\"\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("histogramBuckectNum 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("expectedMaxTPA 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("expectedMinTPA -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("linearBucketDistribution false");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.TASK_PROCESSING_AMOUNT, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testTaskProcessingAmountHistogramBucketNumLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Workflow workflow {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id workflow");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ownedTasks {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("Task supertask {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("id task");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("triggerStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("implementingClassName \"class\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("inputStreamData ( Pollution )");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("returnedStreamData Pollution");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("rootTask supertask");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("scheduler nodescheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("NodeScheduler nodescheduler {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id nodesscheduler");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("workflows ( workflow )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("TaskProcessingAmount taskprocessingAMount {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id taskprocessingamount");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("target \"workflow.supertask\"\t\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("histogramBuckectNum -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("expectedMaxTPA 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("expectedMinTPA 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("linearBucketDistribution false");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.TASK_PROCESSING_AMOUNT, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testVolumCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"label\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"pull\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testVolumSourceEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"label\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"pull\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.VOLUME, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testVolumTargetEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem CompleteSystem {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"18/18/2024\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"Julio\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster MyProcessingNodeCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( MyNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("KafkaService PollutionKafka {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("commId 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionKafka");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"9092\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("autoCreateTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deleteTopicEnable false");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnect PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("zookeeperConnectionTimeout 6000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numPartitions 4");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numRecoveryThreadsPerDataDir 1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushInterval 1000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("logFlushIntervalMessages 10000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numIOThreads 8");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("numNetworkThreads 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketReceiveBufferBytes 12400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketRequestMaxBytes 104857600");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("socketSendBufferBytes 102400");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig KubernetesDeploymentConf \"New Kubernetes Deployment Conf\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("replicas 1");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("args \"some args\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("command \"ls -l\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("constraints DeploymentConstraints {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("labels \"label\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("resources \"resources\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("env \"key=value\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("externalIP \"200.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imagePullPolicy \"pull\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("imageTag \"tag\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("ports {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Port {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("published \"no\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"target\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("restartPolicy \"restart\"");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("serviceType CLUSTER_IP");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("volumes {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("Volume {");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("source \"source\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("target \"\"");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("accessMode READONLYMANY");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("type BIND");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2181\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host MyProcessingNodeCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("codeFolderPath \"/home/gestor/apache/Services/zookeeper/code\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.VOLUME, 
        MyPasysValidator.EMPTY_FIELD);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceCorrect() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode ZkNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"3444\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(model);
      final EList<Resource.Diagnostic> errors = model.eResource().getErrors();
      boolean _isEmpty = errors.isEmpty();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("Unexpected errors: ");
      String _join = IterableExtensions.join(errors, ", ");
      _builder_1.append(_join);
      Assertions.assertTrue(_isEmpty, _builder_1.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceClientPortValueEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceClientPortValueSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1045\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceClientPortValueGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"65536\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceClientPortNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1045\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceLeaderPortValueEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1026\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceLeaderPortValueSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"5002\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceLeaderPortValueGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"65536\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceLeaderPortNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServicePeerPortValueEmpty() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServicePeerPortValueSmallerThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServicePeerPortValueGreaterThanAllowed() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"65536\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServicePeerPortNotANumber() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"NotANumber\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"3888\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.INVALID_PORT_FORMAT);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceClientPortAndLeaderPortSameValue() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.SAME_PORTS);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServicePeerPortAndLeaderPortSameValue() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2145\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.SAME_PORTS);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServicePeerPortAndClientPortSameValue() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"1023\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.SAME_PORTS);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceTickTimeLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2120\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceInitLimitLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2120\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 3");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServiceSyncLimitLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId 0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2120\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }

  @Test
  public void testZookeeperServerIdLessThanZero() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("ComputationalSystem SantanderPollution {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("date \"20/11/2019\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("authors \"P. López y R. Dintén\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("ownedElements {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("PhysicalProcessingNode MyNode {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id MyNode");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("ip \"127.0.0.1\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("speedFactor 1.0");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("userName \"Julio\"");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("},");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ProcessingNodeCluster ZkCluster {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("nodes ( ZkNode )");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}, ");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("ZookeeperService PollutionZkpr {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("id PollutionZkpr");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("serverId -1");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("clientPort \"2120\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("tickTime 2000");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderServers true");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("peerPort \"2100\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("leaderPort \"1025\"");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("initLimit 5");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("syncLimit 2");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("host ZkCluster");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("deploymentConfig NodeDeploymentConf \"zkService.sh\" {");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("isRunning false");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("artifactLocator \"/home/gestor/apache/Services/zookeeper/bin\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("configFolderPath \"/home/gestor/apache/Services/zookeeper/config\" ");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("dataFolderPath \"/home/gestor/apache/Services/zookeeper/data\"");
      _builder.newLine();
      _builder.append("                ");
      _builder.append("logFolderPath \"/home/gestor/apache/Services/zookeeper/logs\" ");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("scriptFolderPath \"/home/gestor/apache/Services/zookeeper/scripts\"\t");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("}\t\t\t");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final ComputationalSystem model = this.parseHelper.parse(_builder);
      this.validationHelper.assertError(model, 
        PasysPackage.Literals.ZOOKEEPER_SERVICE, 
        MyPasysValidator.NEGATIVE_NUMERIC_VALUE);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
