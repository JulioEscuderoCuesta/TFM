/**
 */
package es.unican.istr.pasys.pasys.provider;

import es.unican.istr.pasys.pasys.util.PasysAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class PasysItemProviderAdapterFactory extends PasysAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public PasysItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.ComputationalSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComputationalSystemItemProvider computationalSystemItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.ComputationalSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComputationalSystemAdapter() {
		if (computationalSystemItemProvider == null) {
			computationalSystemItemProvider = new ComputationalSystemItemProvider(this);
		}

		return computationalSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.PhysicalProcessingNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhysicalProcessingNodeItemProvider physicalProcessingNodeItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.PhysicalProcessingNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhysicalProcessingNodeAdapter() {
		if (physicalProcessingNodeItemProvider == null) {
			physicalProcessingNodeItemProvider = new PhysicalProcessingNodeItemProvider(this);
		}

		return physicalProcessingNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.AWSVirtualProcessingNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AWSVirtualProcessingNodeItemProvider awsVirtualProcessingNodeItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.AWSVirtualProcessingNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAWSVirtualProcessingNodeAdapter() {
		if (awsVirtualProcessingNodeItemProvider == null) {
			awsVirtualProcessingNodeItemProvider = new AWSVirtualProcessingNodeItemProvider(this);
		}

		return awsVirtualProcessingNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.ProcessingNodeCluster} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessingNodeClusterItemProvider processingNodeClusterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.ProcessingNodeCluster}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessingNodeClusterAdapter() {
		if (processingNodeClusterItemProvider == null) {
			processingNodeClusterItemProvider = new ProcessingNodeClusterItemProvider(this);
		}

		return processingNodeClusterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.OrchestrationCluster} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrchestrationClusterItemProvider orchestrationClusterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.OrchestrationCluster}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrchestrationClusterAdapter() {
		if (orchestrationClusterItemProvider == null) {
			orchestrationClusterItemProvider = new OrchestrationClusterItemProvider(this);
		}

		return orchestrationClusterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.KubernetesCluster} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KubernetesClusterItemProvider kubernetesClusterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.KubernetesCluster}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKubernetesClusterAdapter() {
		if (kubernetesClusterItemProvider == null) {
			kubernetesClusterItemProvider = new KubernetesClusterItemProvider(this);
		}

		return kubernetesClusterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.SwarmCluster} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SwarmClusterItemProvider swarmClusterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.SwarmCluster}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSwarmClusterAdapter() {
		if (swarmClusterItemProvider == null) {
			swarmClusterItemProvider = new SwarmClusterItemProvider(this);
		}

		return swarmClusterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.NomadCluster} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NomadClusterItemProvider nomadClusterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.NomadCluster}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNomadClusterAdapter() {
		if (nomadClusterItemProvider == null) {
			nomadClusterItemProvider = new NomadClusterItemProvider(this);
		}

		return nomadClusterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.Network} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkItemProvider networkItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.Network}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkAdapter() {
		if (networkItemProvider == null) {
			networkItemProvider = new NetworkItemProvider(this);
		}

		return networkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.AVROService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AVROServiceItemProvider avroServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.AVROService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAVROServiceAdapter() {
		if (avroServiceItemProvider == null) {
			avroServiceItemProvider = new AVROServiceItemProvider(this);
		}

		return avroServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.ZookeeperService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ZookeeperServiceItemProvider zookeeperServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.ZookeeperService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createZookeeperServiceAdapter() {
		if (zookeeperServiceItemProvider == null) {
			zookeeperServiceItemProvider = new ZookeeperServiceItemProvider(this);
		}

		return zookeeperServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.KafkaService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KafkaServiceItemProvider kafkaServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.KafkaService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKafkaServiceAdapter() {
		if (kafkaServiceItemProvider == null) {
			kafkaServiceItemProvider = new KafkaServiceItemProvider(this);
		}

		return kafkaServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.NodeScheduler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeSchedulerItemProvider nodeSchedulerItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.NodeScheduler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeSchedulerAdapter() {
		if (nodeSchedulerItemProvider == null) {
			nodeSchedulerItemProvider = new NodeSchedulerItemProvider(this);
		}

		return nodeSchedulerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.SparkService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SparkServiceItemProvider sparkServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.SparkService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSparkServiceAdapter() {
		if (sparkServiceItemProvider == null) {
			sparkServiceItemProvider = new SparkServiceItemProvider(this);
		}

		return sparkServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.StormService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StormServiceItemProvider stormServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.StormService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStormServiceAdapter() {
		if (stormServiceItemProvider == null) {
			stormServiceItemProvider = new StormServiceItemProvider(this);
		}

		return stormServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.StormUI} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StormUIItemProvider stormUIItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.StormUI}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStormUIAdapter() {
		if (stormUIItemProvider == null) {
			stormUIItemProvider = new StormUIItemProvider(this);
		}

		return stormUIItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.StormNimbus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StormNimbusItemProvider stormNimbusItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.StormNimbus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStormNimbusAdapter() {
		if (stormNimbusItemProvider == null) {
			stormNimbusItemProvider = new StormNimbusItemProvider(this);
		}

		return stormNimbusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.StormSupervisor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StormSupervisorItemProvider stormSupervisorItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.StormSupervisor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStormSupervisorAdapter() {
		if (stormSupervisorItemProvider == null) {
			stormSupervisorItemProvider = new StormSupervisorItemProvider(this);
		}

		return stormSupervisorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.Neo4JService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Neo4JServiceItemProvider neo4JServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.Neo4JService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNeo4JServiceAdapter() {
		if (neo4JServiceItemProvider == null) {
			neo4JServiceItemProvider = new Neo4JServiceItemProvider(this);
		}

		return neo4JServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.MemSQLService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemSQLServiceItemProvider memSQLServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.MemSQLService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemSQLServiceAdapter() {
		if (memSQLServiceItemProvider == null) {
			memSQLServiceItemProvider = new MemSQLServiceItemProvider(this);
		}

		return memSQLServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.CassandraService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CassandraServiceItemProvider cassandraServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.CassandraService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCassandraServiceAdapter() {
		if (cassandraServiceItemProvider == null) {
			cassandraServiceItemProvider = new CassandraServiceItemProvider(this);
		}

		return cassandraServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.DataCenter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataCenterItemProvider dataCenterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.DataCenter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataCenterAdapter() {
		if (dataCenterItemProvider == null) {
			dataCenterItemProvider = new DataCenterItemProvider(this);
		}

		return dataCenterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.Rack} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RackItemProvider rackItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.Rack}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRackAdapter() {
		if (rackItemProvider == null) {
			rackItemProvider = new RackItemProvider(this);
		}

		return rackItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.PrometheusService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrometheusServiceItemProvider prometheusServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.PrometheusService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrometheusServiceAdapter() {
		if (prometheusServiceItemProvider == null) {
			prometheusServiceItemProvider = new PrometheusServiceItemProvider(this);
		}

		return prometheusServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.ExporterData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExporterDataItemProvider exporterDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.ExporterData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExporterDataAdapter() {
		if (exporterDataItemProvider == null) {
			exporterDataItemProvider = new ExporterDataItemProvider(this);
		}

		return exporterDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.StreamDataPartition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StreamDataPartitionItemProvider streamDataPartitionItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.StreamDataPartition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStreamDataPartitionAdapter() {
		if (streamDataPartitionItemProvider == null) {
			streamDataPartitionItemProvider = new StreamDataPartitionItemProvider(this);
		}

		return streamDataPartitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.FlowStreamData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlowStreamDataItemProvider flowStreamDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.FlowStreamData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlowStreamDataAdapter() {
		if (flowStreamDataItemProvider == null) {
			flowStreamDataItemProvider = new FlowStreamDataItemProvider(this);
		}

		return flowStreamDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.KafkaFlowStreamData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KafkaFlowStreamDataItemProvider kafkaFlowStreamDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.KafkaFlowStreamData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKafkaFlowStreamDataAdapter() {
		if (kafkaFlowStreamDataItemProvider == null) {
			kafkaFlowStreamDataItemProvider = new KafkaFlowStreamDataItemProvider(this);
		}

		return kafkaFlowStreamDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.DerivedStreamData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedStreamDataItemProvider derivedStreamDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.DerivedStreamData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedStreamDataAdapter() {
		if (derivedStreamDataItemProvider == null) {
			derivedStreamDataItemProvider = new DerivedStreamDataItemProvider(this);
		}

		return derivedStreamDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.WorkloadStreamData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkloadStreamDataItemProvider workloadStreamDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.WorkloadStreamData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkloadStreamDataAdapter() {
		if (workloadStreamDataItemProvider == null) {
			workloadStreamDataItemProvider = new WorkloadStreamDataItemProvider(this);
		}

		return workloadStreamDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.KafkaWorkloadStreamData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KafkaWorkloadStreamDataItemProvider kafkaWorkloadStreamDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.KafkaWorkloadStreamData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKafkaWorkloadStreamDataAdapter() {
		if (kafkaWorkloadStreamDataItemProvider == null) {
			kafkaWorkloadStreamDataItemProvider = new KafkaWorkloadStreamDataItemProvider(this);
		}

		return kafkaWorkloadStreamDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.Workflow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkflowItemProvider workflowItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.Workflow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkflowAdapter() {
		if (workflowItemProvider == null) {
			workflowItemProvider = new WorkflowItemProvider(this);
		}

		return workflowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.SchedulableSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchedulableSetItemProvider schedulableSetItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.SchedulableSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchedulableSetAdapter() {
		if (schedulableSetItemProvider == null) {
			schedulableSetItemProvider = new SchedulableSetItemProvider(this);
		}

		return schedulableSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.Task} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskItemProvider taskItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.Task}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskAdapter() {
		if (taskItemProvider == null) {
			taskItemProvider = new TaskItemProvider(this);
		}

		return taskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.TaskExecutor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskExecutorItemProvider taskExecutorItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.TaskExecutor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskExecutorAdapter() {
		if (taskExecutorItemProvider == null) {
			taskExecutorItemProvider = new TaskExecutorItemProvider(this);
		}

		return taskExecutorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.ProcessingNodeUtilization} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessingNodeUtilizationItemProvider processingNodeUtilizationItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.ProcessingNodeUtilization}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessingNodeUtilizationAdapter() {
		if (processingNodeUtilizationItemProvider == null) {
			processingNodeUtilizationItemProvider = new ProcessingNodeUtilizationItemProvider(this);
		}

		return processingNodeUtilizationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.ProcessingNodeMemory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessingNodeMemoryItemProvider processingNodeMemoryItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.ProcessingNodeMemory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessingNodeMemoryAdapter() {
		if (processingNodeMemoryItemProvider == null) {
			processingNodeMemoryItemProvider = new ProcessingNodeMemoryItemProvider(this);
		}

		return processingNodeMemoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.NetworkUtilization} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkUtilizationItemProvider networkUtilizationItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.NetworkUtilization}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkUtilizationAdapter() {
		if (networkUtilizationItemProvider == null) {
			networkUtilizationItemProvider = new NetworkUtilizationItemProvider(this);
		}

		return networkUtilizationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.WorkflowLatency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkflowLatencyItemProvider workflowLatencyItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.WorkflowLatency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkflowLatencyAdapter() {
		if (workflowLatencyItemProvider == null) {
			workflowLatencyItemProvider = new WorkflowLatencyItemProvider(this);
		}

		return workflowLatencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.TaskProcessingAmount} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskProcessingAmountItemProvider taskProcessingAmountItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.TaskProcessingAmount}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskProcessingAmountAdapter() {
		if (taskProcessingAmountItemProvider == null) {
			taskProcessingAmountItemProvider = new TaskProcessingAmountItemProvider(this);
		}

		return taskProcessingAmountItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.StreamDataRate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StreamDataRateItemProvider streamDataRateItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.StreamDataRate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStreamDataRateAdapter() {
		if (streamDataRateItemProvider == null) {
			streamDataRateItemProvider = new StreamDataRateItemProvider(this);
		}

		return streamDataRateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.PrometheusMeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrometheusMeterItemProvider prometheusMeterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.PrometheusMeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrometheusMeterAdapter() {
		if (prometheusMeterItemProvider == null) {
			prometheusMeterItemProvider = new PrometheusMeterItemProvider(this);
		}

		return prometheusMeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.NodeResourceMeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeResourceMeterItemProvider nodeResourceMeterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.NodeResourceMeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeResourceMeterAdapter() {
		if (nodeResourceMeterItemProvider == null) {
			nodeResourceMeterItemProvider = new NodeResourceMeterItemProvider(this);
		}

		return nodeResourceMeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.CommunicationMeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationMeterItemProvider communicationMeterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.CommunicationMeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationMeterAdapter() {
		if (communicationMeterItemProvider == null) {
			communicationMeterItemProvider = new CommunicationMeterItemProvider(this);
		}

		return communicationMeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.StreamRateMeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StreamRateMeterItemProvider streamRateMeterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.StreamRateMeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStreamRateMeterAdapter() {
		if (streamRateMeterItemProvider == null) {
			streamRateMeterItemProvider = new StreamRateMeterItemProvider(this);
		}

		return streamRateMeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.WorkflowLatencyMeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkflowLatencyMeterItemProvider workflowLatencyMeterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.WorkflowLatencyMeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkflowLatencyMeterAdapter() {
		if (workflowLatencyMeterItemProvider == null) {
			workflowLatencyMeterItemProvider = new WorkflowLatencyMeterItemProvider(this);
		}

		return workflowLatencyMeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.TaskProcessingAmountMeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskProcessingAmountMeterItemProvider taskProcessingAmountMeterItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.TaskProcessingAmountMeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskProcessingAmountMeterAdapter() {
		if (taskProcessingAmountMeterItemProvider == null) {
			taskProcessingAmountMeterItemProvider = new TaskProcessingAmountMeterItemProvider(this);
		}

		return taskProcessingAmountMeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.NodeDeploymentConf} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeDeploymentConfItemProvider nodeDeploymentConfItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.NodeDeploymentConf}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeDeploymentConfAdapter() {
		if (nodeDeploymentConfItemProvider == null) {
			nodeDeploymentConfItemProvider = new NodeDeploymentConfItemProvider(this);
		}

		return nodeDeploymentConfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.KubernetesDeploymentConf} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KubernetesDeploymentConfItemProvider kubernetesDeploymentConfItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.KubernetesDeploymentConf}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKubernetesDeploymentConfAdapter() {
		if (kubernetesDeploymentConfItemProvider == null) {
			kubernetesDeploymentConfItemProvider = new KubernetesDeploymentConfItemProvider(this);
		}

		return kubernetesDeploymentConfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.SwarmDeploymentConf} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SwarmDeploymentConfItemProvider swarmDeploymentConfItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.SwarmDeploymentConf}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSwarmDeploymentConfAdapter() {
		if (swarmDeploymentConfItemProvider == null) {
			swarmDeploymentConfItemProvider = new SwarmDeploymentConfItemProvider(this);
		}

		return swarmDeploymentConfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.NomadDeploymentConf} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NomadDeploymentConfItemProvider nomadDeploymentConfItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.NomadDeploymentConf}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNomadDeploymentConfAdapter() {
		if (nomadDeploymentConfItemProvider == null) {
			nomadDeploymentConfItemProvider = new NomadDeploymentConfItemProvider(this);
		}

		return nomadDeploymentConfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.Volume} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VolumeItemProvider volumeItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.Volume}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVolumeAdapter() {
		if (volumeItemProvider == null) {
			volumeItemProvider = new VolumeItemProvider(this);
		}

		return volumeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.Port} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortItemProvider portItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.Port}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortAdapter() {
		if (portItemProvider == null) {
			portItemProvider = new PortItemProvider(this);
		}

		return portItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.DeploymentConstraints} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeploymentConstraintsItemProvider deploymentConstraintsItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.DeploymentConstraints}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeploymentConstraintsAdapter() {
		if (deploymentConstraintsItemProvider == null) {
			deploymentConstraintsItemProvider = new DeploymentConstraintsItemProvider(this);
		}

		return deploymentConstraintsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link java.util.Map.Entry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringToStringMapItemProvider stringToStringMapItemProvider;

	/**
	 * This creates an adapter for a {@link java.util.Map.Entry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringToStringMapAdapter() {
		if (stringToStringMapItemProvider == null) {
			stringToStringMapItemProvider = new StringToStringMapItemProvider(this);
		}

		return stringToStringMapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.FileDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileDescriptorItemProvider fileDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.FileDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileDescriptorAdapter() {
		if (fileDescriptorItemProvider == null) {
			fileDescriptorItemProvider = new FileDescriptorItemProvider(this);
		}

		return fileDescriptorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.DeploymentFileDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeploymentFileDescriptorItemProvider deploymentFileDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.DeploymentFileDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeploymentFileDescriptorAdapter() {
		if (deploymentFileDescriptorItemProvider == null) {
			deploymentFileDescriptorItemProvider = new DeploymentFileDescriptorItemProvider(this);
		}

		return deploymentFileDescriptorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.unican.istr.pasys.pasys.ArtifactDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArtifactDescriptorItemProvider artifactDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@link es.unican.istr.pasys.pasys.ArtifactDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArtifactDescriptorAdapter() {
		if (artifactDescriptorItemProvider == null) {
			artifactDescriptorItemProvider = new ArtifactDescriptorItemProvider(this);
		}

		return artifactDescriptorItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (computationalSystemItemProvider != null) computationalSystemItemProvider.dispose();
		if (physicalProcessingNodeItemProvider != null) physicalProcessingNodeItemProvider.dispose();
		if (awsVirtualProcessingNodeItemProvider != null) awsVirtualProcessingNodeItemProvider.dispose();
		if (processingNodeClusterItemProvider != null) processingNodeClusterItemProvider.dispose();
		if (orchestrationClusterItemProvider != null) orchestrationClusterItemProvider.dispose();
		if (kubernetesClusterItemProvider != null) kubernetesClusterItemProvider.dispose();
		if (swarmClusterItemProvider != null) swarmClusterItemProvider.dispose();
		if (nomadClusterItemProvider != null) nomadClusterItemProvider.dispose();
		if (networkItemProvider != null) networkItemProvider.dispose();
		if (avroServiceItemProvider != null) avroServiceItemProvider.dispose();
		if (zookeeperServiceItemProvider != null) zookeeperServiceItemProvider.dispose();
		if (kafkaServiceItemProvider != null) kafkaServiceItemProvider.dispose();
		if (nodeSchedulerItemProvider != null) nodeSchedulerItemProvider.dispose();
		if (sparkServiceItemProvider != null) sparkServiceItemProvider.dispose();
		if (stormServiceItemProvider != null) stormServiceItemProvider.dispose();
		if (stormUIItemProvider != null) stormUIItemProvider.dispose();
		if (stormNimbusItemProvider != null) stormNimbusItemProvider.dispose();
		if (stormSupervisorItemProvider != null) stormSupervisorItemProvider.dispose();
		if (neo4JServiceItemProvider != null) neo4JServiceItemProvider.dispose();
		if (memSQLServiceItemProvider != null) memSQLServiceItemProvider.dispose();
		if (cassandraServiceItemProvider != null) cassandraServiceItemProvider.dispose();
		if (dataCenterItemProvider != null) dataCenterItemProvider.dispose();
		if (rackItemProvider != null) rackItemProvider.dispose();
		if (prometheusServiceItemProvider != null) prometheusServiceItemProvider.dispose();
		if (exporterDataItemProvider != null) exporterDataItemProvider.dispose();
		if (streamDataPartitionItemProvider != null) streamDataPartitionItemProvider.dispose();
		if (flowStreamDataItemProvider != null) flowStreamDataItemProvider.dispose();
		if (kafkaFlowStreamDataItemProvider != null) kafkaFlowStreamDataItemProvider.dispose();
		if (derivedStreamDataItemProvider != null) derivedStreamDataItemProvider.dispose();
		if (workloadStreamDataItemProvider != null) workloadStreamDataItemProvider.dispose();
		if (kafkaWorkloadStreamDataItemProvider != null) kafkaWorkloadStreamDataItemProvider.dispose();
		if (workflowItemProvider != null) workflowItemProvider.dispose();
		if (schedulableSetItemProvider != null) schedulableSetItemProvider.dispose();
		if (taskItemProvider != null) taskItemProvider.dispose();
		if (taskExecutorItemProvider != null) taskExecutorItemProvider.dispose();
		if (processingNodeUtilizationItemProvider != null) processingNodeUtilizationItemProvider.dispose();
		if (processingNodeMemoryItemProvider != null) processingNodeMemoryItemProvider.dispose();
		if (networkUtilizationItemProvider != null) networkUtilizationItemProvider.dispose();
		if (workflowLatencyItemProvider != null) workflowLatencyItemProvider.dispose();
		if (taskProcessingAmountItemProvider != null) taskProcessingAmountItemProvider.dispose();
		if (streamDataRateItemProvider != null) streamDataRateItemProvider.dispose();
		if (prometheusMeterItemProvider != null) prometheusMeterItemProvider.dispose();
		if (nodeResourceMeterItemProvider != null) nodeResourceMeterItemProvider.dispose();
		if (communicationMeterItemProvider != null) communicationMeterItemProvider.dispose();
		if (streamRateMeterItemProvider != null) streamRateMeterItemProvider.dispose();
		if (workflowLatencyMeterItemProvider != null) workflowLatencyMeterItemProvider.dispose();
		if (taskProcessingAmountMeterItemProvider != null) taskProcessingAmountMeterItemProvider.dispose();
		if (nodeDeploymentConfItemProvider != null) nodeDeploymentConfItemProvider.dispose();
		if (kubernetesDeploymentConfItemProvider != null) kubernetesDeploymentConfItemProvider.dispose();
		if (swarmDeploymentConfItemProvider != null) swarmDeploymentConfItemProvider.dispose();
		if (nomadDeploymentConfItemProvider != null) nomadDeploymentConfItemProvider.dispose();
		if (volumeItemProvider != null) volumeItemProvider.dispose();
		if (portItemProvider != null) portItemProvider.dispose();
		if (deploymentConstraintsItemProvider != null) deploymentConstraintsItemProvider.dispose();
		if (stringToStringMapItemProvider != null) stringToStringMapItemProvider.dispose();
		if (fileDescriptorItemProvider != null) fileDescriptorItemProvider.dispose();
		if (deploymentFileDescriptorItemProvider != null) deploymentFileDescriptorItemProvider.dispose();
		if (artifactDescriptorItemProvider != null) artifactDescriptorItemProvider.dispose();
	}

}
